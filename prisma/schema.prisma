generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model pachinko_type {
  id   Int    @id @default(autoincrement())
  name String @unique

  pachinko_daily_activities pachinko_daily_activity[]

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)
}

model pachinko_daily_activity {
  id               Int                        @id @default(autoincrement())
  pachinko_type_id Int
  date             DateTime                   @db.Date
  location         Int
  total_games      Int
  payout           Int
  edge_distance    Int?
  edge_ref         edge_type?
  pachinko_type    pachinko_type              @relation(fields: [pachinko_type_id], references: [id])
  payout_snapshots pachinko_payout_snapshot[]
  parlor_id        Int
  parlor           parlor                     @relation(fields: [parlor_id], references: [id])

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)

  @@unique([pachinko_type_id, location, date, parlor_id])
  @@index([parlor_id])
}

model pachinko_payout_snapshot {
  id                         Int  @id @default(autoincrement())
  pachinko_daily_activity_id Int
  payout                     Int
  diff                       Int?
  order                      Int

  pachinko_daily_activity pachinko_daily_activity @relation(fields: [pachinko_daily_activity_id], references: [id])

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)

  @@unique([pachinko_daily_activity_id, order])
}

model parlor {
  id                        Int                       @id @default(autoincrement())
  name                      String
  pachinko_daily_activities pachinko_daily_activity[]
}

enum edge_type {
  inner
  outer
}
